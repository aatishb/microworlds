pico-8 cartridge // http://www.pico-8.com
version 16
__lua__

gameover = false

function _init()
  snake:init()
  fruit:init()
end

function _update()
  if not gameover then
    snake:move()
  end
end

function _draw()
  if gameover then
    print('game over', 50, 64)
  else
    cls()
    map(0)
    fruit:draw()
    snake:draw()
  end
end

snake = {
  x = 64,
  y = 64,
  body = {},
  direction = 2,
  step = 2,
  length = 10,
  size = 3,

  init = function(self)
    add(self.body, point(self.x,self.y))
  end,

  draw = function(self)
    for pt in all(self.body) do
      circfill(pt.x, pt.y, self.size, 8)
    end
  end,

  move = function(self)

    if (btn(0) and self.direction != 1) then
      self.direction = 0
    elseif (btn(1) and self.direction != 0) then
      self.direction = 1
    elseif (btn(2) and self.direction != 3) then
      self.direction = 2
    elseif (btn(3) and self.direction != 2) then
      self.direction = 3
    end

    local oldx = self.x
    local oldy = self.y

    if self.direction == 0 then
      self.x -= self.step
    elseif self.direction == 1 then
      self.x += self.step
    elseif self.direction == 2 then
      self.y -= self.step
    elseif self.direction == 3 then
      self.y += self.step
    end

    if oldx != self.x then
      local sign = sgn(self.x - oldx)
      while (oldx != self.x) do
        oldx += sign
        local newpt = point(flr(oldx), self.y)
        self:checkforcollisions(newpt)
      end
    end

    if oldy != self.y then
      local sign = sgn(self.y - oldy)
      while (oldy != self.y) do
        oldy += sign
        local newpt = point(self.x, flr(oldy))
        self:checkforcollisions(newpt)
      end
    end

    for i=1,#self.body - self.length do
      del(self.body, self.body[i])
    end

  end,

  checkfruitcollision = function(self, pt)
    return (dist(pt, fruit) <= 2 * self.size)
  end,

  checktilecollision = function(self, pt)
    return tilecollision(pt, self.size)
  end,

  checkforcollisions = function(self, pt)
    if self:contains(pt) or self:checktilecollision(pt) then
      gameover = true
    else
      add(self.body, pt)

      if self:checkfruitcollision(pt) then
        fruit:init()
        self.length += 5
      end
    end
  end,

  contains = function(self, pt)
    return containspoint(self.body, pt)
  end


}

fruit = {
  x = 0,
  y = 0,
  size = snake.size,

  init = function(self)
    self.x = fruit:randpos()
    self.y = fruit:randpos()
  end,

  randpos = function(self)
    return flr(rnd(128))
  end,

  draw = function(self)
    circfill(self.x, self.y, self.size, 10)
  end
}



function point(x0, y0)
  return {x = x0, y = y0}
end

function dist(pt1, pt2)
  local deltax = pt1.x - pt2.x
  local deltay = pt1.y - pt2.y
  return abs(deltax) + abs(deltay)
end


function distsq(pt1, pt2)
  local deltax = pt1.x - pt2.x
  local deltay = pt1.y - pt2.y
  return deltax*deltax + deltay*deltay
end


function containspoint(list, val)
  local found = false

  for v in all(list) do
    if (v.x == val.x and v.y == val.y) found = true
  end

  return found
end

function tilecollision(pt, size)
    local x1=(pt.x - size)/8
    local y1=(pt.y - size)/8
    local x2=(pt.x + size)/8
    local y2=(pt.y + size)/8
    local a=fget(mget(x1,y1),1)
    local b=fget(mget(x1,y2),1)
    local c=fget(mget(x2,y2),1)
    local d=fget(mget(x2,y1),1)

    --rect(8*x1,8*y1,8*x2,8*y2,7)
    return (a or b or c or d)
end
__gfx__
00000000333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000003bbbbbb30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007003b3333b30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770003b3bb3b30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000770003b3bb3b30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007003b3333b30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000003bbbbbb30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0100000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
